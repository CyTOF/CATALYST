cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols_anno$merging <- cols[sample(cols, nlevels(factor(merging)))]
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
cols_anno
row_anno
row_anno$merging <- factor(merging)
cols_anno$merging <- cols[sample(cols, nlevels(factor(merging)))]
cols_anno
cols
cols_anno$merging <- sample(cols, nlevels(factor(merging)))
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- data.frame(cluster_id=factor(med_exprs_scaled$cluster_id))
rownames(row_anno) <- rownames(m)
# cluster colors
cols <- colorRampPalette(brewer.pal(9, "Set1"))(20)
n_clusters <- nlevels(row_anno$cluster_id)
cluster_cols <- cols[sample(20, n_clusters)]
names(cluster_cols) <- rownames(m)
cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols_anno$merging <- sample(cols, nlevels(factor(merging)))
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
names(cols_anno) <- levels(merging)
levels(merging)
levels(factor(merging))
names(cols_anno) <- levels(factor(merging))
cols <- sample(cols, nlevels(factor(merging)))
names(cols_anno) <- levels(factor(merging))
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno$merging <- cols
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- data.frame(cluster_id=factor(med_exprs_scaled$cluster_id))
rownames(row_anno) <- rownames(m)
# cluster colors
cols <- colorRampPalette(brewer.pal(9, "Set1"))(20)
n_clusters <- nlevels(row_anno$cluster_id)
cluster_cols <- cols[sample(20, n_clusters)]
names(cluster_cols) <- rownames(m)
cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno$merging <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- data.frame(cluster_id=factor(med_exprs_scaled$cluster_id))
rownames(row_anno) <- rownames(m)
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
n_clusters <- nlevels(row_anno$cluster_id)
cluster_cols <- cols[sample(20, n_clusters)]
names(cluster_cols) <- rownames(m)
cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno$merging <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
n_clusters <- nlevels(row_anno$cluster_id)
cluster_cols <- cols[sample(20, n_clusters)]
names(cluster_cols) <- rownames(m)
cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno$merging <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
n_clusters <- nlevels(row_anno$cluster_id)
cluster_cols <- cols[sample(20, n_clusters)]
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
nlevels*mc_ids
nlevels(mc_ids)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno$merging <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- cols
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno, annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno <- factor(merging)
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- list(merging=cluster_cols)
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno,
annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno <- data.frame(merging=factor(merging))
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- list(merging=cluster_cols)
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno,
annotation_legend=legend,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
legend <- FALSE
if (!is.null(merging)) {
row_anno <- data.frame(merging=factor(merging))
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- list(merging=cluster_cols)
legend <- TRUE
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno,
annotation_color=cols_anno,
cluster_rows=row_clustering,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
levels(factor(merging))
plot_clustering_heatmap <- function(
exprs, exprs_scaled, cluster_ids, merging=NULL) {
# compute median expressions
med_exprs <- data.frame(exprs, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
med_exprs_scaled <- data.frame(exprs_scaled, cluster_id=cluster_ids) %>%
group_by(cluster_id) %>% summarize_all(funs(median))
# compute cluster frequencies
counts <- table(cluster_ids)
# clustering based on markers used for clustering
d <- dist(med_exprs[, colnames(exprs)], method="euclidean")
row_clustering <- hclust(d, method="average")
m <- as.matrix(med_exprs_scaled[, colnames(exprs_scaled)])
rownames(m) <- med_exprs$cluster_id
# row and column labels
props <- paste0("(", round(counts/sum(counts)*100, 2), "%)")
row_labs <- paste(rownames(m), props)
col_labs <- colnames(m)
# heatmap annotations
row_anno <- NULL
anno_cols <- NULL
# cluster colors
cols <- colorRampPalette(brewer.pal(11, "Spectral"))(20)
cluster_cols <- sample(cols, 20)
names(cluster_cols) <- rownames(m)
#cols_anno <- list(cluster_id=cluster_cols)
if (!is.null(merging)) {
row_anno <- data.frame(Merging=factor(merging))
cols <- sample(cols, nlevels(factor(merging)))
names(cols) <- levels(factor(merging))
cols_anno <- list(Merging=cluster_cols)
}
pheatmap(m, color=colorRampPalette(rev(brewer.pal(9,"RdYlBu")))(100),
cluster_colors=cluster_cols,
annotation_row=row_anno,
annotation_color=cols_anno,
cluster_rows=row_clustering,
annotation_legend=FALSE,
cluster_cols=FALSE,
labels_row=row_labs)
}
plot_clustering_heatmap(exprs, exprs_scaled, mc_ids, merging)
