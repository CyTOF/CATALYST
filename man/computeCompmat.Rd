% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/computeCompmat.R
\docType{methods}
\name{computeCompmat}
\alias{computeCompmat}
\alias{computeCompmat,dbFrame-method}
\title{Compensation matrix}
\usage{
computeCompmat(x, ...)

\S4method{computeCompmat}{dbFrame}(x, method = "mean", trim = 0.08)
}
\arguments{
\item{x}{a \code{\link{dbFrame}} containing measured intensities, 
a numeric vector of column indices corresponding to barcode 
channels as debarcoding key, and barcode IDs.}

\item{...}{further optional arguments.}

\item{method}{function to be used for computing spillover estimates. Defaults to \code{median}.}
}
\value{
Returns a square compensation matrix with dimensions and dimension names matching 
those of the input flowFrame. Only specified \code{bc_chs} are taken into consideration 
for computation. Spillover is assumed to be linear and is thence computed as the ratio 
of a positive barcode population's median intensity in affected and spilling channel, 
corrected for their median negative signals. Furthermore, spillover values are computed 
independently for each interacting pair of channels, that is, they are additive.
The current framework considers only potential (not all possible) interactions, that is,
+/-1M (detection sensitivity), same metals (isotopic impurites) and -16M (oxide formation).
By default, diagonal entries are set to 1.
}
\description{
Computes the compensation matrix.
}
\examples{
data(ss_beads)
bc_ms <- c(139, 141:156, 158:176)
re <- assignPrelim(x = ss_beads, y = bc_ms)
re <- estCutoffs(x = re)
re <- applyCutoffs(x = re)
head(computeCompmat(x = re))

}
\author{
Helena Lucia Crowell \email{crowellh@student.ethz.ch}
}

