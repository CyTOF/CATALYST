{
    "collab_server" : "",
    "contents" : "# ==============================================================================\n# Validity check for 'which' in 'plotEvents()' and 'plotYields()'\n#       - stop if not a single ID is valid\n#       - warning if some ID(s) is/are not valid and remove it/them\n# ------------------------------------------------------------------------------\ncheck_validity_which <- function(which, ids, fct) {\n    \n    msg_events <- c(\n        \" Valid values for 'which' are IDs that occur as row names in the\\n\",\n        \" 'bc_key' slot of the supplied 'dbFrame', or 0 for unassigned events.\")\n    \n    msg_yields <- c(\n        \" Valid values for 'which' are IDs that occur as row names in the\\n\",\n        \" 'bc_key' slot of the supplied 'dbFrame', or 0 for all barcodes.\")\n    \n    if (length(which) == 1 && !which %in% c(0, ids)) {\n        if (fct == \"events\") {\n            stop(paste(which), \n                \" is not a valid barcode ID.\\n\", \n                msg_events, call.=FALSE)\n        } else if (fct == \"yields\") {\n            stop(paste(which), \n                \" is not a valid barcode ID.\\n\", \n                msg_yields, call.=FALSE)\n        }\n    } else {\n        new <- which[!is.na(match(which, c(0, ids)))]\n        removed <- which[!which %in% new]\n        if (length(new) == 0) {\n            if (fct == \"events\") {\n                stop(paste(removed, collapse=\", \"), \n                    \" are not valid barcode IDs.\\n\",\n                    msg_events, call.=FALSE)\n            } else if (fct == \"yields\") {\n                stop(paste(removed, collapse=\", \"), \n                    \" are not valid barcode IDs.\\n\",\n                    msg_yields, call.=FALSE)\n            }\n        } else if (length(new) != length(which)) {\n            which <- new\n            if (length(removed) == 1) {\n                warning(paste(removed),\n                    \" is not a valid barcode ID and has been skipped.\",\n                    call.=FALSE)\n            } else {\n                warning(paste(removed, collapse=\", \"),\n                    \" are not valid barcode IDs and have been skipped.\",\n                    call.=FALSE)\n            }\n        } \n    }\n    as.character(which)\n}\n\n# ==============================================================================\n# Validity check for clustering 'k': should be...\n#       - a numeric that accesses the FlowSOM clustering (100),\n#         or ConsensusClusterPlus metaclustering (2, ..., 20)\n#       - a character string that matches with a 'label' specifying\n#         a merging done with 'mergeClusters'\n# ------------------------------------------------------------------------------\ncheck_validity_of_k <- function(x, k) {\n    available_clusterings <- colnames(metadata(x)$cluster_codes)\n    if (!as.character(k) %in% available_clusterings) {\n        if (is.numeric(k)) {\n            txt <- k \n        } else {\n            txt <- dQuote(k)\n        }\n        ks <- suppressWarnings(as.numeric(colnames(cluster_codes(x))))\n        ks <- ks[!is.na(ks)]\n        stop(\"Clustering 'k = \", txt, \"' doesnt't exist. \", \n            \"Should be one of\\n  \", paste(c(ks, dQuote(setdiff(\n                available_clusterings, ks))), collapse=\", \"))\n    }\n}\n\n\n\n# ==============================================================================\n# Validity check for columns (used in daFrame constructor): should be...\n#        - a logical vector\n#        - numeric vector of indices\n#        - character vector of column names\n# ------------------------------------------------------------------------------\ncheck_validity_cols <- function(cols_to_use, col_nms) {\n    n_cols <- length(col_nms)\n    \n    check1 <- is.logical(cols_to_use) & length(cols_to_use) == n_cols\n    check2 <- all(cols_to_use %in% col_nms)\n    check3 <- FALSE\n    if (is.integer(x))\n        check3 <- min(cols_to_use >= 1) && max(cols_to_use <= ncol)\n\n    if (!(check1 | check2 | check3))\n        stop(\"Invalid argument 'cols_to_use'.\\nShould be either\", \n            \" a logial vector, a numeric vector of indices, or\",\n            \" a character vector of column names.\")\n}\n",
    "created" : 1517648903601.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "242864854",
    "id" : "E97B3EBB",
    "lastKnownWriteTime" : 1517649623,
    "last_content_update" : 1517649623107,
    "path" : "~/Documents/CATALYST/R/validityChecks.R",
    "project_path" : "R/validityChecks.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}