{
    "collab_server" : "",
    "contents" : "# ==============================================================================\n# FlowSOM clustering and ConsensusClusterPlus metaclustering\n# ------------------------------------------------------------------------------\n#' @rdname cluster\n#' @title FlowSOM clustering and ConsensusClusterPlus metaclustering\n#' \n#' @description \n#' \\code{CATALYST::cluster()} runs \\code{\\link{FlowSOM}} clustering into 100,\n#' and \\code{\\link{ConsensusClusterPlus}} metaclustering into 2-20 clusters. \n#' In the returned \\code{daFrame}, those antigens used for clustering will be \n#' labelled as 'type1', and the remainder of antigens as 'type2'. A binary \n#' indication of each marker's type can be viewed via \\code{colData(daFrame)}. \n#' Differential analysis should be performed on type2 markers exclusively. \n#'\n#' @param x a \\code{\\link{daFrame}}.\n#' @param cols_to_use a character vector.\n#' Specifies which antigens to use for clustering.\n#' @param xdim,ydim numerical values specifying the grid size of the\n#' self-orginizing map. The default 10x10 grid will yield 100 clusters. \n#' @param maxK numerical value. Specifies the maximum \n#' number of clusters to evaluate in the metaclustering.\n#' \n#' @return a \\code{ggplot} object.\n#' \n#' @examples\n#' data(PBMC_fs, PBMC_panel, PBMC_md)\n#' re <- daFrame(PBMC_fs, PBMC_panel, PBMC_md)\n#' \n#' # specify antigens to use for clustering\n#' lineage <- c(\"CD3\", \"CD45\", \"CD4\", \"CD20\", \"CD33\", \n#'     \"CD123\", \"CD14\", \"IgM\", \"HLA_DR\", \"CD7\")\n#' (re <- cluster(re, cols_to_use=lineage))\n#' \n#' # sanity check\n#' all.equal(lineage, type1(re))\n#' \n#' # get type2 markers for differential analysis\n#' type2(re)\n#' \n#' @author\n#' Helena Lucia Crowell \\email{crowellh@student.ethz.ch}\n#' @references \n#' Nowicka M, Krieg C, Weber LM et al. \n#' CyTOF workflow: Differential discovery in \n#' high-throughput high-dimensional cytometry datasets.\n#' \\emph{F1000Research} 2017, 6:748 (doi: 10.12688/f1000research.11622.1)\n#' \n#' @import ConsensusClusterPlus\n#' @importFrom flowCore flowFrame\n#' @importFrom FlowSOM BuildSOM ReadInput\n# ==============================================================================\n\nsetMethod(f=\"cluster\",\n    signature=signature(x=\"daFrame\"),\n    definition=function(x, cols_to_use, xdim=10, ydim=10, maxK=20) {\n        \n        # replace dash with underscore\n        cols_to_use <- gsub(\"-\", \"_\", cols_to_use)\n        \n        # flowSOM clustering\n        message(\"o running FlowSOM clustering...\")\n        fsom <- ReadInput(flowFrame(exprs(x)))\n        som <- BuildSOM(fsom, colsToUse=cols_to_use, \n            silent=TRUE, xdim=xdim, ydim=ydim)\n        codes <- som$map$codes\n        cluster_ids <- som$map$mapping[, 1]\n        \n        # metaclustering\n        message(\"o running ConsensusClusterPlus metaclustering...\")\n        pdf(NULL)\n        mc <- suppressMessages(ConsensusClusterPlus(t(codes), \n            maxK=maxK, reps=100, distance=\"euclidean\", plot=\"pdf\"))\n        dev.off()\n\n        # get cluster codes\n        k <- xdim * ydim\n        cluster_codes <- data.frame(matrix(0, k, maxK, \n            dimnames=list(NULL, c(k, 2:maxK))), check.names=FALSE)\n        for (i in seq_len(maxK)[-1])\n            cluster_codes[, i] <- mc[[i]]$consensusClass\n        cluster_codes[, 1] <- seq_len(k)\n        \n        col_data <- data.frame(row.names=colnames(exprs(x)),\n            type1=as.numeric(colnames(exprs(x)) %in% cols_to_use))\n        col_data$type2 <- as.numeric(!col_data$type1)\n\n        rowData(x)$cluster_id <- cluster_ids\n        colData(x)$type1 <- col_data$type1\n        colData(x)$type2 <- col_data$type2\n        metadata(x)$SOM_codes <- codes\n        metadata(x)$cluster_codes <- cluster_codes\n        return(x)\n    }\n)\n",
    "created" : 1517653969265.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2046059678",
    "id" : "183C3A51",
    "lastKnownWriteTime" : 1517648837,
    "last_content_update" : 1517648837,
    "path" : "~/Documents/CATALYST/R/cluster.R",
    "project_path" : "R/cluster.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}