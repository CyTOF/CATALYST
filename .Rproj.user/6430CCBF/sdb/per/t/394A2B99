{
    "collab_server" : "",
    "contents" : "# ==============================================================================\n# Accessor & replacement methods for class daFrame\n# ------------------------------------------------------------------------------\n#' @rdname daFrame-methods\n#' @title \n#' Extraction and replacement methods for objects of class \\code{daFrame}\n#' @aliases \n#' daFrame-methods exprs lineage functional conditions \n#' sample_ids cluster_ids merging_codes merging_ids\n#' \n#' @description\n#' Methods for accessing slots in a \\code{\\link{daFrame}}.\n#' @return\n#' \\describe{\n#' \\item{\\code{exprs}}{extracts the arcsinh-transformed expressions.}\n#' \\item{\\code{n_events}}{extracts the number of events measured per sample.}\n#' \\item{\\code{type1}}{extracts the antigens used for clustering.}\n#' \\item{\\code{type2}}{extracts antigens that were not used for clustering.}\n#' \\item{\\code{sample_ids}}{extracts the sample IDs \n#' as specified in the metadata-table.}\n#' \\item{\\code{cluster_ids}}{extracts the numeric vector of cluster IDs\n#' as inferred by \\code{\\link{FlowSOM}}.}\n#' \\item{\\code{cluster_codes}}{extracts a \\code{data.frame} containing \n#' cluster codes for the \\code{\\link{FlowSOM}} clustering, \n#' the \\code{\\link{ConsensusClusterPlus}} metaclustering, \n#' and all mergings done through \\code{\\link{mergeClusters}}.}\n#' }\n#' \n#' @param x,object a \\code{\\link{daFrame}}.\n#' \n#' @examples \n#' \n#' @author Helena Lucia Crowell \\email{crowellh@student.ethz.ch}\n\n# ==============================================================================\n# Access slots in a daFrame\n# ------------------------------------------------------------------------------\n#' @rdname daFrame-methods\n#' @importFrom Biobase exprs\n#' @export\nsetMethod(f=\"exprs\",\n    signature=\"daFrame\",\n    definition=function(object) return(assays(object)$es))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"n_events\",\n    signature=\"daFrame\",\n    definition=function(x) return(metadata(x)$n_events))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"type1\",      \n    signature=\"daFrame\", \n    definition=function(x) return(colnames(x)[as.logical(colData(x)$type1)]))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"type2\",      \n    signature=\"daFrame\",\n    definition=function(x) return(colnames(x)[as.logical(colData(x)$type2)]))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"sample_ids\",  \n    signature=\"daFrame\", \n    definition=function(x) return(rowData(x)$sample_id))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"cluster_ids\",  \n    signature=\"daFrame\", \n    definition=function(x) return(rowData(x)$cluster_id))\n\n#' @rdname daFrame-methods\nsetMethod(f=\"cluster_codes\",  \n    signature=\"daFrame\", \n    definition=function(x) return(metadata(x)$cluster_codes))",
    "created" : 1517593098969.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2075625429",
    "id" : "394A2B99",
    "lastKnownWriteTime" : 1517593137,
    "last_content_update" : 1517593137859,
    "path" : "~/Documents/CATALYST/R/daFrame-methods.R",
    "project_path" : "R/daFrame-methods.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}