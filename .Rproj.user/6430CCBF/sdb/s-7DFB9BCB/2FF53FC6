{
    "collab_server" : "",
    "contents" : "library(flowCore)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(SCORPIUS)\nlibrary(SLICER)\nlibrary(monocle)\nlibrary(reshape2)\nlibrary(matrixStats)\nlibrary(ComplexHeatmap)\n\n# channels used by Wanderlust\nwl <- c(\"CD45(In115)Di\", \"CD19(Nd142)Di\", \"IgD(Nd145)Di\", \"CD79b(Nd146)Di\", \"CD20(Sm147)Di\", \"CD34(Nd148)Di\", \"CD179a(Sm149)Di\", \"CD72(Eu151)Di\", \"IgM(Eu153)Di\", \"Kappa(Sm154)Di\", \"CD10(Gd156)Di\", \"Lambda(Gd157)Di\", \"pSTAT3(Gd158)Di\", \"pBLNK(Gd160)Di\", \"CD38(Er168)Di\", \"pBTK(Yb171)Di\", \"HLA-DR(Yb174)Di\")\n\nfcs_path <- \"/users/hlc/dropbox/thesis/data/Bendall\"\nfcs <- list.files(fcs_path, \".fcs\", full.names=TRUE)\nffs <- lapply(fcs[grep(\"Sample [ABCD]\", fcs)], read.FCS)\nes <- lapply(ffs, exprs)\nexprs <- es[[1]][, wl]\n\ndists <- correlation_distance(exprs)\ncoords <- cmdscale(dists)\ndf <- data.frame(coords)\nggplot(df, aes(x=X1, y=X2)) + geom_point()\n\n# ------------------------------------------------------------------------------\n# Scorpius\n# ------------------------------------------------------------------------------\ndists <- correlation_distance(exprs)\nspace <- reduce_dimensionality(dists, ndim=2)\ntraj <- infer_trajectory(space)\npath <- data.frame(traj$path)\n\ndf <- data.frame(space, path_x=traj$path[,1], path_y=traj$path[,2], time=traj$time)\nggplot(df) + labs(x=\"component 1\", y=\"component 2\") +\n    geom_point(aes(x=Comp1, y=Comp2, col=time)) + \n    geom_path(aes(x=path_x, y=path_y), size=1) +\n    scale_color_gradientn(colors=brewer.pal(11, \"Spectral\"), breaks=seq(0,1,.2)) +\n    scale_x_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    scale_y_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    theme_void() + theme(\n        aspect.ratio=1,\n        panel.grid.minor=element_blank(),\n        panel.grid.major=element_line(color=\"grey\", size=.25),\n        axis.title=element_text(color=\"black\", face=\"bold\"),\n        axis.text=element_text(color=\"black\"))\n\ndf <- data.frame(t(t(exprs)/colMaxs(exprs)), time=traj$time)\ndf <- melt(df, id.var=\"time\", value.name=\"expression\")\nggplot(df, aes(x=time, y=expression, col=variable, group=variable)) + \n    geom_point() + facet_wrap(~variable, scale=\"free_y\")\n\n# ------------------------------------------------------------------------------\n# SLICER\n# ------------------------------------------------------------------------------\nk <- select_k(exprs)\ntraj_lle <- lle::lle(exprs, m=2, k)$Y\ntraj_graph <- conn_knn_graph(traj_lle, k=5)\nends <- find_extreme_cells(traj_graph, traj_lle)\nstart <- ends[2]\ncell_ordering <- cell_order(traj_graph, start)\n#branches <- assign_branches(traj_graph, start)\ngraph_process_distance(traj_graph, traj_lle, start)\n\npca <- prcomp(exprs)$x\ncoords <- pca[, c(\"PC1\", \"PC2\")]\ndf <- data.frame(coords, order=cell_ordering/max(cell_ordering))\nggplot(df) +\n    geom_point(aes(x=PC1, y=PC2, col=order)) + \n    #geom_path(aes(x=path_x, y=path_y), size=1) +\n    scale_color_gradientn(colors=brewer.pal(11, \"Spectral\"), breaks=seq(0,1,.2)) +\n    #scale_x_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    #scale_y_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    theme_void() + theme(\n        aspect.ratio=1,\n        panel.grid.minor=element_blank(),\n        panel.grid.major=element_line(color=\"grey\", size=.25),\n        axis.title=element_text(color=\"black\", face=\"bold\"),\n        axis.text=element_text(color=\"black\"))\n\n# ------------------------------------------------------------------------------\n# monocle\n# ------------------------------------------------------------------------------\nexprs <- es[[1]][, -c(1:2, 46:50)]\nexprs[exprs < 0] <- 0\nfd <- new(\"AnnotatedDataFrame\", data=data.frame(gene_short_name=seq_len(ncol(exprs)), row.names=colnames(exprs)))\npd <- new(\"AnnotatedDataFrame\", data=data.frame(seq_len(nrow(exprs))))\ncds <- newCellDataSet(cellData=t(exprs), phenoData=pd, featureData=fd)\n\ncds <- estimateSizeFactors(cds)\ncds <- estimateDispersions(cds)\ndisp_table <- dispersionTable(cds)\nordering_genes <- disp_table[order(disp_table$mean_expression, decreasing=TRUE), ][1:12, ]\n#ordering_genes <- subset(disp_table, mean_expression >= 10)\ncds <- setOrderingFilter(cds, ordering_genes)\ncds <- reduceDimension(cds, reduction_method=\"ICA\")\ncds <- orderCells(cds, num_paths=2)\nplot_spanning_tree(cds)\n\npca <- prcomp(exprs[, ordering_genes$gene_id])$x\nex <- abs(pca[, 1])>10\npca <- pca[!ex, ]\ncoords <- pca[, c(\"PC1\", \"PC2\")]\ndf <- data.frame(coords, pseudotime=c(phenoData(cds)$Pseudotime/max(phenoData(cds)$Pseudotime))[!ex])\nggplot(df) +\n    geom_point(aes(x=PC1, y=PC2, col=pseudotime)) + \n    #geom_path(aes(x=path_x, y=path_y), size=1) +\n    scale_color_gradientn(colors=brewer.pal(11, \"Spectral\"), breaks=seq(0,1,.2)) +\n    #scale_x_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    #scale_y_continuous(limits=c(-.5,.5), breaks=seq(-.5,.5,.25), expand=c(.1,0)) +\n    theme_void() + theme(\n        aspect.ratio=1,\n        panel.grid.minor=element_blank(),\n        panel.grid.major=element_line(color=\"grey\", size=.25),\n        axis.title=element_text(color=\"black\", face=\"bold\"),\n        axis.text=element_text(color=\"black\"))\n\n\ndf <- data.frame(\n    asinh(t(exprs(cds))/5)[, 28] / max(asinh(t(exprs(cds))/5)[, 28]), \n    pseudotime=es[[1]][, \"wanderlust\"])\ndf$pseudotime <-  phenoData(cds)$Pseudotime / max(phenoData(cds)$Pseudotime)\ncolnames(df)[-ncol(df)] <- colnames(exprs)[1]\n#df <- df[, c(paste(ordering_genes$gene_id), \"pseudotime\")]\ndf <- melt(df, id.var=\"pseudotime\")\ndf <- df[!df$value<1e-3, ]\nggplot(df, aes(x=pseudotime/max(pseudotime), y=value)) + \n    stat_density_2d(aes(fill=..density..^.5/max(..density..^.5)), \n        geom=\"tile\", h=c(.1,.25), n=100, contour=FALSE) +\n    scale_fill_gradientn(\"normalized\\ndensity\", breaks=seq(0,1,.2), \n        colors=rev(brewer.pal(11, \"Spectral\"))) +\n    theme_classic() + theme(aspect.ratio=.5)\n\no <- order(phenoData(cds)$Pseudotime)\nplot_cell_trajectory(cds, color_by=\"Pseudotime\")\n\n\n",
    "created" : 1517314741046.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1189298674",
    "id" : "2FF53FC6",
    "lastKnownWriteTime" : 4294967302,
    "last_content_update" : 1517401723361,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}